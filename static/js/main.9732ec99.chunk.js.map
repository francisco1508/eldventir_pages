{"version":3,"sources":["components/Balanza/images/Base.svg","components/Balanza/images/Balanza.svg","components/Balanza/images/ico-terminar.svg","components/Balanza/images/ico-descarga.svg","serviceWorker.js","components/Global/api.js","components/Balanza/student/Balanza.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","axios","create","baseURL","Balanza","state","description","right_side","left_side","values","name","category","is_finish","onDragStart","ev","id","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","_this","getData","tasks","filter","task","setState","Object","objectSpread","onFinish","choiceValue","onDownload","domtoimage","toPng","document","getElementById","quality","bgcolor","then","dataUrl","link","createElement","download","href","click","_this2","this","finishHidden","downloadHidden","repisaMiddle","repisaDown","leftSide","rightSide","choice","forEach","t","push","react_default","a","key","e","className","draggable","balanzaStudentElementsSize","balanzaStudentConceptsDisplay","balanzaStudentBalanzaPosition","itemsSelected","length","balanzaInclinacion","leftSideContainer","rightSideContainer","valueLeftSide","valueRightSide","display","src","BalanzaBlanza","alt","BaseBalanza","style","type","onClick","IconoTerminar","IconoDescargar","Component","render","student_Balanza","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9732ec99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Base.d3529177.svg\";","module.exports = __webpack_public_path__ + \"static/media/Balanza.8a07ff3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ico-terminar.949e0e8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ico-descarga.aaf4a751.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: `http://localhost:8000/v1/`\r\n});","import React, { Component } from 'react';\r\nimport '../css/Balanza.css';\r\nimport BaseBalanza from '../images/Base.svg';\r\nimport BalanzaBlanza from '../images/Balanza.svg';\r\nimport API from '../../Global/api';\r\nimport IconoTerminar from '../images/ico-terminar.svg'\r\nimport IconoDescargar from '../images/ico-descarga.svg'\r\nimport domtoimage from 'dom-to-image'\r\n\r\n\r\nclass Balanza extends Component {\r\n    /*state = {\r\n        values: [\r\n            {name: '', category:'choice'},\r\n            \r\n        ]\r\n    }*/\r\n\r\n    state = {\r\n        description: \"Coloca en cada lado de la balanza el valor positivo y negativo en cada lado\",\r\n        right_side: \"Positivo\",\r\n        left_side: \"Negativo\",\r\n        values: [\r\n            {name: 'Positivo 1', category:'choice'},\r\n            {name: 'Positivo 2', category:'choice'},\r\n            {name: 'Negativo 1', category:'choice'},\r\n            {name: 'Negativo 2', category:'choice'},\r\n            {name: 'Negativo 3', category:'choice'},\r\n        ],\r\n        is_finish: false,\r\n    }\r\n\r\n    /*componentDidMount() {\r\n        API.get(`tasks/`)\r\n            .then(res=>{\r\n                const task_data = {\r\n                    description: res.data.data.description,\r\n                    right_side: res.data.data.right_side,\r\n                    left_side: res.data.data.left_side,\r\n                    values: JSON.parse(res.data.data.values),\r\n                    is_finish: false\r\n                };\r\n                \r\n                this.setState(task_data);\r\n            })\r\n            .catch(error => {\r\n                console.log('Error', error);\r\n            });\r\n    }*/\r\n\r\n    onDragStart = (ev, id) =>{\r\n        ev.dataTransfer.setData(\"id\", id);\r\n    };\r\n    onDragOver = (ev) =>{\r\n        ev.preventDefault();\r\n    };\r\n    onDrop = (ev, cat) =>{\r\n        if (!this.state.is_finish){\r\n            let id = ev.dataTransfer.getData(\"id\");\r\n            let tasks = this.state.values.filter((task)=>{\r\n                if (task.name === id){\r\n                    task.category=cat;\r\n                }\r\n                return task;\r\n            });\r\n            this.setState({\r\n                ...this.state,\r\n                tasks\r\n            });\r\n        }\r\n    };\r\n    onFinish = (ev) =>{\r\n        ev.preventDefault();\r\n\r\n        let choiceValue = 0;\r\n        this.state.values.filter((task)=>{\r\n            if (task.category === 'choice'){\r\n                    choiceValue += 1;\r\n                }\r\n                return task;\r\n            });\r\n            \r\n        if(choiceValue === 0){\r\n            this.setState({is_finish: true});\r\n        }\r\n    };\r\n    onDownload = (ev) =>{\r\n        ev.preventDefault();\r\n        domtoimage.toPng(document.getElementById('balanzaStudent'), \r\n            { quality: 0.95 , bgcolor: 'white'})\r\n        .then(function (dataUrl) {\r\n            var link = document.createElement('a');\r\n            link.download = 'my-image-name.png';\r\n            link.href = dataUrl;\r\n            link.click();\r\n        });\r\n    };\r\n    render(){\r\n        var finishHidden = {};\r\n        var downloadHidden = {};\r\n        var repisaMiddle = {};\r\n        var repisaDown = {};\r\n                \r\n        var tasks = {\r\n            leftSide:[],\r\n            rightSide:[],\r\n            choice:[],\r\n        };\r\n        \r\n        this.state.values.forEach((t)=>{\r\n            tasks[t.category].push(\r\n                <div key={t.name}\r\n                    onDragStart={(e)=>this.onDragStart(e, t.name)}\r\n                    className=\"balanzaStudentConcept fontMB\"\r\n                    draggable=\"true\"\r\n                >\r\n                    <div className=\"balanzaStudentConceptText\">{t.name}</div>\r\n                 </div>\r\n            );\r\n        });        \r\n        \r\n        let itemsSelected = tasks.leftSide.length + tasks.rightSide.length;\r\n        let balanzaInclinacion = 'balanzaStudentBalanzaItems';\r\n        let leftSideContainer = 'balanzaStudentLeftSide';\r\n        let rightSideContainer = 'balanzaStudentRightSide';\r\n        let balanzaStudentElementsSize;\r\n        let balanzaStudentConceptsDisplay;\r\n        let balanzaStudentBalanzaPosition;    \r\n\r\n       if(tasks.leftSide.length > tasks.rightSide.length){\r\n            let valueLeftSide = tasks.leftSide.length / itemsSelected;\r\n            if(valueLeftSide>(3/6) && valueLeftSide <= (4/6)){\r\n                balanzaInclinacion = 'balanzaStudentBalanzaLeftOne';\r\n                leftSideContainer = 'balanzaStudentLeftSideOneDown';\r\n                rightSideContainer = 'balanzaStudentRightSideOneUp';\r\n            }else if(valueLeftSide>(4/6) && valueLeftSide <= (5/6)){\r\n                balanzaInclinacion = 'balanzaStudentBalanzaLeftTwo';\r\n                leftSideContainer = 'balanzaStudentLeftSideTwoDown';\r\n                rightSideContainer = 'balanzaStudentRightSideTwoUp';\r\n            }else{\r\n                balanzaInclinacion = 'balanzaStudentBalanzaLeftThree';\r\n                leftSideContainer = 'balanzaStudentLeftSideThreeDown';\r\n                rightSideContainer = 'balanzaStudentRightSideThreeUp';\r\n           }\r\n       \r\n       } else if(tasks.leftSide.length < tasks.rightSide.length){\r\n            let valueRightSide = tasks.rightSide.length / itemsSelected;\r\n            if(valueRightSide>(3/6) && valueRightSide <= (4/6)){\r\n                balanzaInclinacion = 'balanzaStudentBalanzaRightOne';\r\n                leftSideContainer = 'balanzaStudentLeftSideOneUp';\r\n                rightSideContainer = 'balanzaStudentRightSideOneDown';\r\n\r\n            }else if(valueRightSide>(4/6) && valueRightSide <= (5/6)){\r\n                balanzaInclinacion = 'balanzaStudentBalanzaRightTwo';\r\n                leftSideContainer = 'balanzaStudentLeftSideTwoUp';\r\n                rightSideContainer = 'balanzaStudentRightSideTwoDown';\r\n\r\n            }else{\r\n                balanzaInclinacion = 'balanzaStudentBalanzaRightThree';\r\n                leftSideContainer = 'balanzaStudentLeftSideThreeUp';\r\n                rightSideContainer = 'balanzaStudentRightSideThreeDown';\r\n        }\r\n       }\r\n       \r\n       if(this.state.is_finish){\r\n            finishHidden.display = 'none';\r\n            downloadHidden.display = 'inline';\r\n            balanzaStudentElementsSize = 'balanzaStudentElementsSize';\r\n            balanzaStudentConceptsDisplay = 'balanzaStudentConceptsDisplay';\r\n            balanzaStudentBalanzaPosition = 'balanzaStudentBalanzaPos';\r\n            \r\n\r\n       } else {\r\n            finishHidden.display = 'inline';\r\n            downloadHidden.display = 'none';\r\n            balanzaStudentElementsSize = 'balanzaStudentElements';\r\n            balanzaStudentConceptsDisplay = 'balanzaStudentConcepts';\r\n            balanzaStudentBalanzaPosition = 'balanzaStudentBalanza';\r\n       }\r\n\r\n        if(this.state.values.length > 3 && this.state.values.length < 6){\r\n            repisaMiddle.display = 'inline-block';\r\n            repisaDown.display = 'none';\r\n        } else if(this.state.values.length > 5 ){\r\n            repisaMiddle.display = 'inline-block';\r\n            repisaDown.display = 'inline-block';\r\n        } else {\r\n            repisaMiddle.display = 'none';\r\n            repisaDown.display = 'none';\r\n        }\r\n\r\n        return(\r\n            <div id=\"balanzaStudent\" className=\"balanzaStudent\">\r\n                <div className=\"balanzaStudentBand\">\r\n                    <div className=\"balanzaStudentText\">\r\n                        <div className=\"balanzaStudentTextIns fontTB\">\r\n                            INSTRUCCIONES:\r\n                        </div>\r\n                        <div className=\"balanzaStudentInstructions fontMB\">\r\n                            {this.state.description}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"balanzaStudentContainer\" className=\"balanzaStudentContainer\">\r\n                    {/*Balanza*/}\r\n                    <div id=\"balanzaStudentBalanza\" className={balanzaStudentBalanzaPosition}>\r\n                        <div className=\"balanzaStudentBalanzaUp\">\r\n                            <div\r\n                                className={leftSideContainer}\r\n                            >\r\n                                <div\r\n                                    className=\"balanzaStudentLeftSideContainer\"\r\n                                    onDragOver={(e)=>this.onDragOver(e)}\r\n                                    onDrop={(e)=>{this.onDrop(e, \"leftSide\")}}\r\n                                >\r\n                                    {tasks.leftSide}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                className={rightSideContainer}\r\n                            >\r\n                                <div\r\n                                    className=\"balanzaStudentRightSideContainer\"\r\n                                    onDragOver={(e)=>this.onDragOver(e)}\r\n                                    onDrop={(e)=>{this.onDrop(e, \"rightSide\")}}>\r\n                                    {tasks.rightSide}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"balanzaStudentBalanzaDown\">\r\n                            <div className=\"balanzaStudentNegative\">\r\n                                <div className=\"negativeValueText fontTS\">\r\n                                    {this.state.left_side}\r\n                                </div>\r\n                            </div>\r\n                            <img\r\n                                className={balanzaInclinacion}\r\n                                src={BalanzaBlanza}\r\n                                alt=\"\"/>\r\n                            <img\r\n                                className=\"balanzaStudentBase\"\r\n                                src={BaseBalanza}\r\n                                alt=\"\"/>\r\n                            <div className=\"balanzaStudentPositive\">\r\n                                <div className=\"positiveValueText fontTS\">\r\n                                    {this.state.right_side}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/*Conceptos*/}\r\n                    <div className={balanzaStudentElementsSize}>\r\n                        <div className={balanzaStudentConceptsDisplay}>\r\n                            <div className=\"balanzaStudentRepisa\">\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[0]}</div>\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[1]}</div>\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[2]}</div>\r\n                            </div>\r\n                            <div className=\"balanzaStudentRepisa\" style={repisaMiddle}>\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[3]}</div>\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[4]}</div>\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[5]}</div>\r\n                            </div>\r\n                            <div className=\"balanzaStudentRepisa\" style={repisaDown}>\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[6]}</div>\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[7]}</div>\r\n                            <div className=\"balanzaStudenRepisaPlace\">{tasks.choice[8]}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"balanzaStudentButton\">\r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"buttonStudentTerminar\"\r\n                                onClick={(e)=>{this.onFinish(e)}}\r\n                                style={finishHidden}\r\n                                >\r\n                                <div className=\"buttonStudentAlineacionImagen\"><img src={IconoTerminar} alt=\"\" /></div>\r\n                                <div className=\"buttonStudentAlineacionTexto\">Terminar</div>\r\n                            </button>\r\n\r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"buttonStudentDescargar\"\r\n                                onClick={(e)=>{this.onDownload(e)}}\r\n                                style={downloadHidden}\r\n                                >\r\n                                <div className=\"buttonStudentAlineacionImagenDescargar\"><img src={IconoDescargar} alt=\"\" /></div>\r\n                                <div className=\"buttonStudentAlineacionTextoDescargar\">Descargar ejercicio</div>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Balanza;","// Dependencies\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\n//import {BrowserRouter as Router} from 'react-router-dom';\r\n\r\n// Routes\r\n//import AppRoutes from './routes';\r\n\r\n//Assets\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Balanza from './components/Balanza/student/Balanza'\r\n//import Dibujo from './components/Dibujo/Dibujo'\r\n\r\nrender(\r\n    <Balanza/>\r\n    , document.getElementById('root')\r\n);\r\n\r\n/*render(\r\n    <Router>\r\n        <AppRoutes/>\r\n    </Router>\r\n    , document.getElementById('root')\r\n);*/\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}